{"version":3,"names":["TokenNegotiatorDiscovery","constructor","negotiator","tokenScript","this","updateFromEngine","async","initialTokenDetails","Promise","resolve","reject","idMap","result","issuers","token","tokenType","name","id","push","ref","blockChain","chainId","collectionId","toLowerCase","CHAIN_MAP","console","warn","onChain","collectionID","contract","chain","length","on","tokens","log","selectedTokens","refId","tokenData","tokensMeta","nftTokenDetails","tokenMeta","collectionDetails","tokenId","title","description","image","data","symbol","_a","nftDetails","balance","setTokenMetadata","negotiate","viewerTabCss","ViewerTab","uuid","Date","now","Client","type","uiOptions","containerElement","theme","openingHeading","walletChangeListener","e","detail","provider","getWalletProvider","currentProvider","disconnectWallet","getUi","updateUI","loadConnections","viewBinding","ViewBinding","host","showToast","bind","setTokenScript","setViewBinding","componentWillLoad","discoveryAdapter","setTokenDiscoveryAdapter","connectedCallback","setupTnInstanceGlue","disconnectedCallback","window","removeEventListener","getConnectedWalletData","providerType","event","dispatchWalletChangedEvent","addEventListener","CustomEvent","dispatchEvent","componentWillUpdate","componentDidLoad","loadTs","querySelector","shadowRoot","setAttribute","cbToast","Toast","timeOut","position","render","h","class","style","display","onClick","document","location","hash","getViewController","unloadTokenCard","sandbox"],"sources":["./src/integration/discoveryAdapter.ts","./src/components/tabs/viewer-tab.css?tag=viewer-tab","./src/components/tabs/viewer-tab.tsx"],"sourcesContent":["import {ITokenDiscoveryAdapter} from \"../../../engine-js/src/tokens/ITokenDiscoveryAdapter\";\nimport {IToken} from \"../../../engine-js/src/tokens/IToken\";\nimport {INFTTokenDetail} from \"../../../engine-js/src/tokens/INFTTokenDetail\";\nimport {CHAIN_MAP} from \"./constants\";\nimport type {Client} from \"@tokenscript/token-negotiator\";\nimport {TokenScript} from \"@tokenscript/engine-js/src/TokenScript\";\n\nexport class TokenNegotiatorDiscovery implements ITokenDiscoveryAdapter {\n\n\tupdateFromEngine = false;\n\n\tconstructor(private negotiator: Client, private tokenScript: TokenScript) {\n\n\t}\n\n\tasync getTokens(initialTokenDetails: IToken[]): Promise<IToken[]> {\n\n\t\tthis.updateFromEngine = true;\n\n\t\treturn new Promise((resolve, reject) => {\n\n\t\t\tconst idMap: {[id: string]: IToken} = {};\n\t\t\tconst result: IToken[] = [];\n\n\t\t\tconst issuers = [];\n\n\t\t\tfor (let token of initialTokenDetails){\n\n\t\t\t\t// TODO: Remove once negotiator/discovery API has erc20 support\n\t\t\t\tif (token.tokenType === \"erc20\"){\n\t\t\t\t\ttoken.name = token.id;\n\t\t\t\t\tresult.push(token);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst ref = (token.blockChain + \"-\" + token.chainId + \"-\" + token.collectionId).toLowerCase();\n\n\t\t\t\tif (!CHAIN_MAP[token.chainId]){\n\t\t\t\t\tconsole.warn(\"Token discovery not supported for chain ID \" + token.chainId);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tidMap[ref] = token;\n\n\t\t\t\tissuers.push({\n\t\t\t\t\tonChain: true,\n\t\t\t\t\tcollectionID: ref,\n\t\t\t\t\tcontract: token.collectionId,\n\t\t\t\t\tchain: CHAIN_MAP[token.chainId]\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// TODO: Remove once negotiator/discovery API has erc20 support\n\t\t\tif (!issuers.length) {\n\t\t\t\tresolve(result);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.negotiator.on('tokens-selected', (tokens) => {\n\n\t\t\t\tconsole.log(\"Tokens discovered: \");\n\t\t\t\tconsole.log(tokens.selectedTokens);\n\n\t\t\t\tfor (let refId in tokens.selectedTokens){\n\n\t\t\t\t\tif (!idMap[refId])\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tconst tokenData = idMap[refId];\n\n\t\t\t\t\t// TODO: Fill in contract level metadata - needs to be added to negotiator\n\n\t\t\t\t\tconst tokensMeta = tokens.selectedTokens[refId].tokens;\n\n\t\t\t\t\tconst nftTokenDetails: INFTTokenDetail[] = [];\n\n\t\t\t\t\tfor (let tokenMeta of tokensMeta){\n\n\t\t\t\t\t\tnftTokenDetails.push({\n\t\t\t\t\t\t\tcollectionDetails: tokenData,\n\t\t\t\t\t\t\ttokenId: tokenMeta.tokenId,\n\t\t\t\t\t\t\tname: tokenMeta.title,\n\t\t\t\t\t\t\tdescription: tokenMeta.description,\n\t\t\t\t\t\t\timage: tokenMeta.image,\n\t\t\t\t\t\t\tdata: tokenMeta\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\ttokenData.symbol = tokensMeta[0]?.symbol;\n\t\t\t\t\ttokenData.nftDetails = nftTokenDetails;\n\t\t\t\t\ttokenData.balance = nftTokenDetails.length;\n\n\t\t\t\t\tresult.push(tokenData);\n\t\t\t\t}\n\n\t\t\t\t// This is hacky but allows us to respond to token updates and wallet change events from negotiator\n\t\t\t\tif (this.updateFromEngine){\n\t\t\t\t\tthis.updateFromEngine = false;\n\t\t\t\t\tresolve(result);\n\t\t\t\t} else {\n\t\t\t\t\tthis.tokenScript.setTokenMetadata(result);\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\tthis.negotiator.negotiate(issuers);\n\t\t});\n\t}\n}\n","\n.attribute-table {\n\tposition: absolute;\n\tbottom: 20px;\n\tbackground: #fff;\n\ttext-align: left;\n\tborder: #000 solid 1px;\n}\n\n.attribute-table td, .attribute-table th {\n\tpadding: 8px;\n}\n\n.close-btn {\n\tposition: absolute;\n\tright: 0;\n\ttop: 0;\n\tmargin: 20px;\n\tfont-size: 22px;\n\tfont-weight: bold;\n\twidth: 35px;\n\theight: 35px;\n}\n\n.card-container {\n\tposition: relative;\n\tmax-width: 500px;\n\tmargin: 50px auto;\n\tborder-radius: 4px;\n}\n\n.view-container {\n\twidth: 100%;\n\tpadding: 20px;\n\tposition: absolute;\n\ttop: 0;\n\tmin-height: 100%;\n\tbackground: #1a1a1ae0;\n\tz-index: 100;\n}\n\n.view-loader {\n\tposition: absolute;\n\tleft: 0;\n\ttop: 0;\n\twidth: 100%;\n\theight: 100%;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tbackground-color: rgba(131,131,131,0.67)\n}\n\n.tokenscript-frame {\n\tbackground: #fff;\n\twidth: 100%;\n\theight: 650px;\n\tborder: 1px solid black;\n\tborder-radius: 4px;\n\tbox-sizing: border-box;\n}\n\n.action-bar {\n\theight: 35px;\n}\n\n.action-btn {\n\twidth: 100%;\n\theight: 100%;\n}\n\n.toast {\n\tposition: absolute;\n\tz-index: 200;\n}\n","import {Component, Element, h, JSX, Prop, Watch} from \"@stencil/core\";\nimport {Components} from \"../../components\";\nimport {TokenScript} from \"../../../../engine-js/src/TokenScript\";\nimport {ViewBinding} from \"../../integration/viewBinding\";\nimport AppRoot = Components.AppRoot;\nimport {Client} from \"@tokenscript/token-negotiator\";\nimport \"@tokenscript/token-negotiator/dist/theme/style.css\";\nimport {TokenNegotiatorDiscovery} from \"../../integration/discoveryAdapter\";\nimport \"cb-toast\";\n\n@Component({\n\ttag: 'viewer-tab',\n\tstyleUrl: 'viewer-tab.css',\n\tshadow: false,\n})\nexport class ViewerTab {\n\n\t@Element() host: HTMLElement;\n\n\t@Prop() app: AppRoot;\n\t@Prop() tabId: string;\n\n\t@Prop() tokenScript: TokenScript;\n\n\tviewBinding: ViewBinding;\n\n\tuuid = Date.now();\n\n\tnegotiator: Client = new Client({\n\t\t'type': 'active',\n\t\t'issuers': [],\n\t\t'uiOptions': {\n\t\t\t'containerElement': '#tn-' + this.uuid,\n\t\t\t'theme': 'light',\n\t\t\t'openingHeading': 'Connect your wallet to load this TokenScripts tokens.'\n\t\t}\n\t});\n\n\tdiscoveryAdapter;\n\n\t@Watch('tokenScript')\n\tasync loadTs(){\n\n\t\tif (!this.viewBinding){\n\t\t\tthis.viewBinding = new ViewBinding(this.host, this.showToast.bind(this));\n\t\t}\n\n\t\tthis.viewBinding.setTokenScript(this.tokenScript);\n\t\tthis.tokenScript.setViewBinding(this.viewBinding);\n\t}\n\n\tcomponentWillLoad(){\n\t\tif (this.tokenScript) {\n\t\t\tthis.discoveryAdapter = new TokenNegotiatorDiscovery(this.negotiator, this.tokenScript);\n\t\t\tthis.tokenScript.setTokenDiscoveryAdapter(this.discoveryAdapter);\n\t\t}\n\t}\n\n\tprivate currentProvider;\n\n\tconnectedCallback(){\n\t\tthis.setupTnInstanceGlue();\n\t}\n\n\tdisconnectedCallback(){\n\t\twindow.removeEventListener(\"tn-wallet-change\", this.walletChangeListener);\n\t\tthis.negotiator.on('connected-wallet', () => {});\n\t\tthis.negotiator.on('tokens-selected', () => {});\n\t\tthis.negotiator = null;\n\t\tthis.discoveryAdapter = null;\n\t}\n\n\tprivate async setupTnInstanceGlue(){\n\n\t\tthis.currentProvider = (await this.negotiator.getWalletProvider()).getConnectedWalletData()[0]?.providerType;\n\n\t\t// TODO: Wallet connect event is extremely unreliable - fix it\n\t\tthis.negotiator.on(\"connected-wallet\", (event) => {\n\n\t\t\tconst providerType = event?.data?.providerType;\n\n\t\t\t//console.log(\"TN IPC \" + (this.uuid) + \": Connected/disconnect wallet\", providerType);\n\n\t\t\t// Only fires this event if the wallet is changed, not for address changes for the same wallet provider\n\t\t\tif (providerType == this.currentProvider)\n\t\t\t\treturn;\n\n\t\t\tthis.currentProvider = providerType;\n\t\t\tthis.dispatchWalletChangedEvent(providerType);\n\t\t});\n\n\t\twindow.addEventListener(\"tn-wallet-change\", this.walletChangeListener)\n\t}\n\n\tprivate walletChangeListener = async (e: CustomEvent) => {\n\n\t\tif (e.detail.id === this.uuid)\n\t\t\treturn;\n\n\t\tconsole.log(\"TN IPC \" + (this.uuid) + \": Processing tn-wallet-change\");\n\n\t\tconst provider = await this.negotiator.getWalletProvider();\n\n\t\tthis.currentProvider = e.detail.provider;\n\n\t\tif (!e.detail.provider) {\n\t\t\tconsole.log(\"TN IPC: Disconnect\");\n\t\t\t//provider.deleteConnections();\n\t\t\tawait this.negotiator.disconnectWallet();\n\t\t\tthis.negotiator.getUi().updateUI('wallet');\n\t\t\treturn;\n\t\t}\n\n\t\tconsole.log(\"TN IPC: Connect\");\n\n\t\t//const currentAddr = provider.getConnectedWalletData()[0]?.address;\n\t\tawait provider.loadConnections();\n\t\t//const newAddr = provider.getConnectedWalletData()[0]?.address;\n\n\t\t// TODO: Not working due to limitations in negotiator\n\t\t//if (currentAddr !== newAddr)\n\t\t\t//this.negotiator.getTokenStore().clearCachedTokens();\n\n\t\tif (this.negotiator.getUi())\n\t\t\tthis.negotiator.getUi().updateUI('main');\n\t}\n\n\tprivate dispatchWalletChangedEvent(provider){\n\t\tconsole.log(\"TN IPC \" + (this.uuid) + \": Sending TN event, disconnect: \", provider);\n\t\tconst event = new CustomEvent(\"tn-wallet-change\", {detail: {id: this.uuid, provider: provider }});\n\t\twindow.dispatchEvent(event);\n\t}\n\n\tcomponentWillUpdate(){\n\t\tthis.discoveryAdapter = new TokenNegotiatorDiscovery(this.negotiator, this.tokenScript);\n\t\tthis.tokenScript.setTokenDiscoveryAdapter(this.discoveryAdapter);\n\t}\n\n\tcomponentDidLoad() {\n\t\tif (this.tokenScript)\n\t\t\tthis.loadTs();\n\n\t\t// TODO: hacky fix to get it positioned below the tab bar\n\t\tthis.host.querySelector(\".toast\").shadowRoot\n\t\t\t.querySelector(\":host > div\")\n\t\t\t.setAttribute(\"style\", \"margin-top: 100px;\");\n\t}\n\n\tshowToast(type: 'success'|'info'|'warning'|'error', title: string, description: string|JSX.Element){\n\n\t\tconst cbToast = this.host.querySelector(\".toast\") as HTMLCbToastElement;\n\n\t\tcbToast.Toast({\n\t\t\ttitle,\n\t\t\tdescription,\n\t\t\ttimeOut: 30000,\n\t\t\tposition: 'top-right',\n\t\t\ttype\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<tokens-grid tokenScript={this.tokenScript} showToast={this.showToast.bind(this)}></tokens-grid>\n\t\t\t\t<div class=\"view-container\" style={{display: \"none\"}}>\n\t\t\t\t\t<button class=\"close-btn\" onClick={() => {\n\t\t\t\t\t\tdocument.location.hash = \"#\";\n\t\t\t\t\t\tthis.tokenScript.getViewController().unloadTokenCard();\n\t\t\t\t\t}}>X</button>\n\t\t\t\t\t<div class=\"card-container\">\n\t\t\t\t\t\t<div class=\"view-loader\" style={{display: \"none\"}}>\n\t\t\t\t\t\t\t<loading-spinner/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<iframe class=\"tokenscript-frame\"\n\t\t\t\t\t\t\t\tsandbox=\"allow-scripts allow-modals allow-forms\">\n\t\t\t\t\t\t</iframe>\n\t\t\t\t\t\t<div class=\"action-bar\" style={{display: \"none\"}}>\n\t\t\t\t\t\t\t<button class=\"action-btn\"></button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<table class=\"attribute-table\"></table>\n\t\t\t\t</div>\n\t\t\t\t<security-status tokenScript={this.tokenScript}/>\n\t\t\t\t<div id={'tn-' + this.uuid} class=\"overlay-tn\"></div>\n\t\t\t\t<cb-toast class=\"toast\"></cb-toast>\n\t\t\t</div>\n\t\t);\n\t}\n}\n"],"mappings":"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"}