import{l as t,e,W as n}from"./p-3cb9a07a.js";import"./p-e52a38f8.js";var i=undefined&&undefined.__awaiter||function(t,e,n,i){function o(t){return t instanceof n?t:new n((function(e){e(t)}))}return new(n||(n=Promise))((function(n,r){function s(t){try{d(i.next(t))}catch(t){r(t)}}function c(t){try{d(i["throw"](t))}catch(t){r(t)}}function d(t){t.done?n(t.value):o(t.value).then(s,c)}d((i=i.apply(t,e||[])).next())}))};class o{constructor(t,e,n){this.client=t;this.walletOptions=e;this.safeConnectOptions=n;this.connections={}}saveConnections(){let t={};for(let e in this.connections){let n=this.connections[e];t[e]={address:n.address,chainId:n.chainId,providerType:n.providerType,blockchain:n.blockchain}}localStorage.setItem(o.LOCAL_STORAGE_KEY,JSON.stringify(t))}emitSavedConnection(t){if(Object.keys(this.connections).length&&t){this.client.eventSender("connected-wallet",this.connections[t.toLocaleLowerCase()]);return this.connections[t.toLocaleLowerCase()]}else{return null}}emitNetworkChange(t){if(t){this.client.eventSender("network-change",t);return t}}deleteConnections(){this.connections={};localStorage.removeItem(o.LOCAL_STORAGE_KEY);localStorage.removeItem("walletconnect");sessionStorage.removeItem("CURRENT_USER")}loadConnections(){return i(this,void 0,void 0,(function*(){let t=localStorage.getItem(o.LOCAL_STORAGE_KEY);if(!t)return;let e=JSON.parse(t);if(!e)return;for(let t in e){let n=e[t];try{yield this.connectWith(n.providerType,true)}catch(n){console.log("Wallet couldn't connect: "+n.message);delete e[t];this.saveConnections();this.emitSavedConnection(t)}}}))}connectWith(e,n=false){return i(this,void 0,void 0,(function*(){if(!e)throw new Error("Please provide a Wallet type to connect with.");if(this[e]){const i=yield this[e](n);t(2,"address",i);this.saveConnections();this.emitSavedConnection(i);return i}else{throw new Error("Wallet type not found")}}))}signMessage(t,e){return i(this,void 0,void 0,(function*(){let n=this.getWalletProvider(t);let i=n.getSigner(t);return yield i.signMessage(e)}))}getWalletProvider(t){var e;t=t.toLowerCase();if(!((e=this.connections[t])===null||e===void 0?void 0:e.provider))throw new Error("Wallet provider not found for address");return this.connections[t].provider}getConnectedWalletData(){return Object.values(this.connections)}registerNewWalletAddress(t,n,i,o,r="evm"){this.connections[t.toLowerCase()]={address:t,chainId:n,providerType:i,provider:o,blockchain:r,ethers:e};return t}registerProvider(t,e){return i(this,void 0,void 0,(function*(){const n=yield t.listAccounts();const i=(yield t.detectNetwork()).chainId;if(n.length===0){throw new Error("No accounts found via wallet-connect.")}let o=n[0];this.registerNewWalletAddress(o,i,e,t);t.provider.on("accountsChanged",(n=>{if(!n||n.length===0){this.client.disconnectWallet();return}if(o===n[0])return;delete this.connections[o.toLowerCase()];o=n[0];this.registerNewWalletAddress(o,i,e,t);this.saveConnections();this.emitSavedConnection(o);this.client.getTokenStore().clearCachedTokens();this.client.enrichTokenLookupDataOnChainTokens()}));t.provider.on("chainChanged",(i=>{this.registerNewWalletAddress(n[0],i,e,t);this.saveConnections();this.emitNetworkChange(i)}));t.provider.on("disconnect",(t=>{if((t===null||t===void 0?void 0:t.message)&&t.message.indexOf("MetaMask: Disconnected from chain")>-1)return;this.client.disconnectWallet()}));return n[0]}))}MetaMask(e){return i(this,void 0,void 0,(function*(){t(2,"connect MetaMask");if(typeof window.ethereum!=="undefined"){yield window.ethereum.enable();const t=new n(window.ethereum,"any");return this.registerProvider(t,"MetaMask")}else{throw new Error("MetaMask is not available. Please check the extension is supported and active.")}}))}WalletConnect(e){return i(this,void 0,void 0,(function*(){t(2,"connect Wallet Connect");const i=yield import("./p-c5fbff58.js");const o=yield i.getWalletConnectProviderInstance(e);return new Promise(((t,i)=>{if(e){o.connector.on("display_uri",((t,e)=>{i(new Error("Connection expired"))}))}o.enable().then((()=>{const e=new n(o,"any");t(this.registerProvider(e,"WalletConnect"))})).catch((t=>i(t)))}))}))}WalletConnectV2(e){var o,r,s,c,d,l;return i(this,void 0,void 0,(function*(){t(2,"connect Wallet Connect V2");const a=yield import("./p-d4032b45.js");const h=yield a.getWalletConnectV2ProviderInstance();let u;h.on("display_uri",(t=>i(this,void 0,void 0,(function*(){console.log("EVENT","QR Code Modal open");u=(yield import("./p-7b244790.js").then((function(t){return t.i}))).default;u.open(t,(()=>{this.client.getUi().showError("User closed modal")}))}))));h.on("session_delete",(({id:t,topic:e})=>{console.log("WC V2 EVENT","session_deleted");this.client.disconnectWallet()}));if(!e){yield h.connect({namespaces:{eip155:{methods:["eth_sendTransaction","eth_signTransaction","eth_sign","personal_sign","eth_signTypedData"],chains:(s=(r=(o=this.walletOptions)===null||o===void 0?void 0:o.walletConnectV2)===null||r===void 0?void 0:r.chains)!==null&&s!==void 0?s:a.WC_V2_DEFAULT_CHAINS,events:["chainChanged","accountsChanged"],rpcMap:(l=(d=(c=this.walletOptions)===null||c===void 0?void 0:c.walletConnectV2)===null||d===void 0?void 0:d.rpcMap)!==null&&l!==void 0?l:a.WC_DEFAULT_RPC_MAP}},pairingTopic:void 0});u.close()}return new Promise(((t,e)=>{h.enable().then((()=>{const e=new n(h,"any");t(this.registerProvider(e,"WalletConnectV2"))})).catch((t=>{e(t)}))}))}))}Torus(t){return i(this,void 0,void 0,(function*(){const t=yield import("./p-0e33d329.js");const e=yield t.getTorusProviderInstance();yield e.init();yield e.login();const i=new n(e.provider,"any");return this.registerProvider(i,"Torus")}))}Phantom(e){return i(this,void 0,void 0,(function*(){t(2,"connect Phantom");if(typeof window.solana!=="undefined"){const t=yield window.solana.connect();const e=t.publicKey.toBase58();return this.registerNewWalletAddress(e,"mainnet-beta","phantom",window.solana,"solana")}else{throw new Error("Phantom is not available. Please check the extension is supported and active.")}}))}SafeConnect(e){return i(this,void 0,void 0,(function*(){t(2,"connect SafeConnect");const e=yield this.getSafeConnectProvider();const n=yield e.initSafeConnect();this.registerNewWalletAddress(n,1,"SafeConnect",e);return n}))}Flow(t){return i(this,void 0,void 0,(function*(){const t=yield import("./p-87f928e7.js");const e=t.getFlowProvider();yield e.currentUser.authenticate();let n=yield e.currentUser.snapshot();if(!n.addr)throw new Error("Failed to connect Flow wallet");this.registerNewWalletAddress(n.addr,1,"flow",e);return n.addr}))}safeConnectAvailable(){return this.safeConnectOptions!==undefined}getSafeConnectProvider(){return i(this,void 0,void 0,(function*(){const{SafeConnectProvider:t}=yield import("./p-3cb9a07a.js").then((function(t){return t.S}));return new t(this.client.getUi(),this.safeConnectOptions)}))}}o.LOCAL_STORAGE_KEY="tn-wallet-connections";export default o;export{o as Web3WalletProvider};
//# sourceMappingURL=p-11124fed.js.map