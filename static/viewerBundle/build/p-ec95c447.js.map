{"version":3,"names":["byteLength_1","byteLength","toByteArray_1","toByteArray","fromByteArray_1","fromByteArray","lookup","revLookup","Arr","Uint8Array","Array","code","i","len","length","charCodeAt","getLens","b64","Error","validLen","indexOf","placeHoldersLen","lens","_byteLength","tmp","arr","curByte","tripletToBase64","num","encodeChunk","uint8","start","end","output","push","join","extraBytes","parts","maxChunkLength","len2","read","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","Math","pow","write","value","c","rt","abs","isNaN","floor","log","LN2"],"sources":["./node_modules/base64-js/index.js","./node_modules/ieee754/index.js"],"sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n"],"mappings":"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"}