{"version":3,"names":["ViewBinding","constructor","view","showToast","this","iframe","querySelector","loader","actionBar","actionBtn","addEventListener","confirmAction","bind","window","handlePostMessageFromView","setTokenScript","tokenScript","viewLoading","showLoader","viewError","error","hideLoader","async","card","currentCard","style","display","injectContentView","setupConfirmButton","renderAttributesTable","src","innerHTML","attrTable","rowRender","attr","isLocal","getName","getCurrentValue","getAttributes","isUrlView","url","html","renderViewHtml","blob","Blob","type","urlFragment","URL","createObjectURL","innerText","label","transaction","getTransaction","console","log","getTransactionInfo","executeTransaction","data","status","h","txNumber","txLink","href","target","e","message","postMessageToView","ViewEvent","ON_CONFIRM","getViewBindingJavascript","document","location","origin","method","params","contentWindow","postMessage","event","source","_a","handleMessageFromView","_b","RequestFromView","SIGN_PERSONAL_MESSAGE","signPersonalMessage","id","PUT_USER_INPUT","getViewController","setUserEntryValues","Error","TOKENS_UPDATED","tokens","currentInstance","oldTokens","updatedTokens","cardId","EXECUTE_CALLBACK","GET_USER_INPUT","Object","assign"],"sources":["./src/integration/viewBinding.tsx"],"sourcesContent":["import {IViewBinding} from \"../../../engine-js/src/view/IViewBinding\";\nimport {Card} from \"../../../engine-js/src/tokenScript/Card\";\nimport {Attribute} from \"../../../engine-js/src/tokenScript/Attribute\";\nimport {TokenScript} from \"../../../engine-js/src/TokenScript\";\nimport {RequestFromView, ViewEvent} from \"@tokenscript/engine-js/src/view/ViewController\";\nimport {JSX, h} from \"@stencil/core\";\n\n// TODO: Merge with viewer-tab.tsx\nexport class ViewBinding implements IViewBinding {\n\n\tcurrentCard?: Card;\n\n\tiframe: HTMLIFrameElement\n\tactionBar: HTMLDivElement;\n\tactionBtn: HTMLButtonElement;\n\tloader: HTMLDivElement;\n\n\tprivate tokenScript: TokenScript\n\n\tconstructor(private view: HTMLElement,\n\t\t\t\tprivate showToast?: (type: 'success'|'info'|'warning'|'error', title: string, description:string|JSX.Element) => void) {\n\n\t\tthis.iframe = view.querySelector(\".tokenscript-frame\") as HTMLIFrameElement;\n\t\tthis.loader = view.querySelector(\".view-loader\") as HTMLDivElement;\n\t\tthis.actionBar = view.querySelector(\".action-bar\") as HTMLDivElement;\n\t\tthis.actionBtn = view.querySelector(\".action-btn\") as HTMLButtonElement;\n\t\tthis.actionBtn.addEventListener('click', this.confirmAction.bind(this));\n\n\t\twindow.addEventListener(\"message\", this.handlePostMessageFromView.bind(this));\n\t}\n\n\tsetTokenScript(tokenScript: TokenScript){\n\t\tthis.tokenScript = tokenScript;\n\t}\n\n\tviewLoading(){\n\t\tthis.showLoader();\n\t}\n\n\tviewError(error: Error): void {\n\t\t// TODO: show error in view\n\t\tthis.hideLoader();\n\t}\n\n\tasync showTokenView(card: Card){\n\n\t\tthis.currentCard = card;\n\n\t\t(this.view.querySelector(\".view-container\") as HTMLDivElement).style.display = \"block\";\n\n\t\tawait this.injectContentView(card);\n\n\t\tthis.setupConfirmButton(card);\n\n\t\tthis.renderAttributesTable();\n\n\t\tthis.hideLoader();\n\t}\n\n\tasync unloadTokenView(){\n\t\tthis.currentCard = null;\n\n\t\t(this.view.querySelector(\".view-container\") as HTMLDivElement).style.display = \"none\";\n\t\tthis.iframe.src = \"\";\n\t\tthis.actionBar.style.display = \"none\";\n\t\tthis.view.querySelector(\".attribute-table\").innerHTML = \"\";\n\t}\n\n\tasync renderAttributesTable(){\n\t\tlet attrTable = \"<tr><th>Attribute</th><th>Value</th></tr>\";\n\n\t\tconst rowRender = async (attr: Attribute, isLocal = false) => {\n\t\t\treturn `<tr><td>${attr.getName()} ${isLocal? \"(Card)\" : \"(Global)\"}</td><td>${await attr.getCurrentValue()}</td></tr>`;\n\t\t}\n\n\t\tfor (let attr of this.tokenScript.getAttributes()){\n\t\t\tattrTable += await rowRender(attr);\n\t\t}\n\n\t\tfor (let attr of this.currentCard.getAttributes()){\n\t\t\tattrTable += await rowRender(attr, true);\n\t\t}\n\n\t\tthis.view.querySelector(\".attribute-table\").innerHTML = attrTable;\n\t}\n\n\tprivate showLoader(){\n\t\tthis.loader.style.display = \"flex\";\n\t}\n\n\tprivate hideLoader(){\n\t\tthis.loader.style.display = \"none\";\n\t}\n\n\tprivate async injectContentView(card: Card){\n\n\t\tif (!card.view) {\n\t\t\tthis.iframe.src = \"\";\n\t\t\treturn;\n\t\t}\n\n\t\tif (card.isUrlView){\n\n\t\t\tthis.iframe.src = card.url;\n\n\t\t} else {\n\t\t\tconst html = await card.renderViewHtml();\n\n\t\t\tconst blob = new Blob( [html], { type: \"text/html\" } );\n\n\t\t\tconst urlFragment = card.urlFragment;\n\n\t\t\tthis.iframe.src = URL.createObjectURL(blob) + (urlFragment ? \"#\"+urlFragment : \"\");\n\n\t\t\t// TODO: try src-doc method\n\t\t}\n\n\t}\n\n\tprivate setupConfirmButton(card: Card){\n\n\t\tif (card.type == \"action\"){\n\t\t\tthis.actionBar.style.display = \"block\";\n\t\t\tthis.actionBtn.innerText = card.label;\n\t\t} else {\n\t\t\tthis.actionBar.style.display = \"none\";\n\t\t}\n\t}\n\n\t// TODO: move this logic into engine\n\tasync confirmAction(){\n\n\t\tconst transaction = this.currentCard.getTransaction();\n\n\t\tthis.showLoader();\n\n\t\tif (transaction){\n\n\t\t\tconsole.log(transaction.getTransactionInfo());\n\n\t\t\ttry {\n\t\t\t\tawait this.currentCard.executeTransaction((data) => {\n\t\t\t\t\tswitch (data.status){\n\t\t\t\t\t\tcase \"submitted\":\n\t\t\t\t\t\t\tthis.showToast(\n\t\t\t\t\t\t\t\t'info',\n\t\t\t\t\t\t\t\t\"Transaction submitted\",\n\t\t\t\t\t\t\t\t(<span>\n\t\t\t\t\t\t\t\t\t{\"Processing TX, please wait.. \"}<br/>\n\t\t\t\t\t\t\t\t\t{\"TX Number: \" + data.txNumber }\n\t\t\t\t\t\t\t\t</span>)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"confirmed\":\n\t\t\t\t\t\t\tthis.showToast(\n\t\t\t\t\t\t\t\t'success',\n\t\t\t\t\t\t\t\t\"Transaction confirmed\",\n\t\t\t\t\t\t\t\t(<span>\n\t\t\t\t\t\t\t\t\t{\"TX \" + data.txNumber + \" confirmed!\"}<br/>{\n\t\t\t\t\t\t\t\t\tdata.txLink ? <a href={data.txLink} target=\"_blank\">{\"View On Block Scanner\"}</a> : ''}\n\t\t\t\t\t\t\t\t</span>)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} catch (e){\n\t\t\t\tconsole.error(e);\n\t\t\t\tthis.showToast('error', \"Transaction Error\", e.message);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// this.iframe.contentWindow.onConfirm();\n\t\t\tthis.postMessageToView(ViewEvent.ON_CONFIRM, {});\n\t\t}\n\n\t\tthis.hideLoader();\n\t}\n\n\tgetViewBindingJavascript(){\n\t\treturn `\n\t\t\twindow.addEventListener(\"message\", (event) => {\n\n\t\t\t\tif (event.origin !== \"${document.location.origin}\")\n\t\t\t\t\treturn;\n\n\t\t\t\tconst params = event.data?.params;\n\n\t\t\t\tswitch (event.data?.method){\n\t\t\t\t\tcase \"tokensUpdated\":\n\t\t\t\t\t\twindow.web3.tokens.dataChanged(params.oldTokens, params.updatedTokens, params.cardId);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"onConfirm\":\n\t\t\t\t\t\twindow.onConfirm();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"executeCallback\":\n\t\t\t\t\t\twindow.executeCallback(params.id, params.error, params.result);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"getUserInput\":\n\t\t\t\t\t\tsendUserInputValues();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfunction sendUserInputValues(){\n\n\t\t\t\tconst inputs = Array.from(document.querySelectorAll(\"textarea,input\")).filter((elem) => !!elem.id);\n\n\t\t\t\tconst values = Object.fromEntries(inputs.map((elem) => {\n\t\t\t\t\treturn [elem.id, elem.value];\n\t\t\t\t}));\n\n\t\t\t\tpostMessageToEngine(\"putUserInput\", values);\n\t\t\t}\n\n\t\t\tfunction postMessageToEngine(method, params){\n\t\t\t\twindow.parent.postMessage({method, params}, {\n\t\t\t\t\ttargetOrigin: \"${document.location.origin}\"\n\t\t\t\t});\n\t\t\t}\n\n\t\t\twindow.alpha = {\n\t\t\t\tsignPersonalMessage: (id, data) => {\n\t\t\t\t\tpostMessageToEngine(\"signPersonalMessage\", {id, data});\n\t\t\t\t}\n\t\t\t};\n\n\t\t\twindow.web3.action.setProps = (params) => {\n\t\t\t\tpostMessageToEngine(\"putUserInput\", params);\n\t\t\t};\n\n\t\t\tfunction listenForUserValueChanges(){\n\t\t\t\twindow.addEventListener('change', (evt) => {\n                    if (!evt.target.id) return;\n\t\t\t\t\tsendUserInputValues();\n                });\n\t\t\t}\n\n\t\t\tlistenForUserValueChanges();\n\t\t\t/*document.addEventListener(\"DOMContentLoaded\", function() {\n\t\t\t\tsendUserInputValues();\n\t\t\t});*/\n\t\t`;\n\t}\n\n\tprivate postMessageToView(method: ViewEvent, params: any){\n\t\tthis.iframe.contentWindow.postMessage({method, params}, \"*\");\n\t}\n\n\tprivate handlePostMessageFromView(event: MessageEvent){\n\n\t\tif (!this.iframe.src)\n\t\t\treturn;\n\n\t\tif (event.source !== this.iframe.contentWindow) {\n\t\t\treturn; // Skip message in this event listener\n\t\t}\n\n\t\t//const iframeOrig = new URL(this.iframe.src).origin;\n\t\t//if (event.origin !== iframeOrig)\n\t\t//return;\n\n\t\tif (!event.data?.method)\n\t\t\treturn;\n\n\t\t//console.log(\"Event from view: \", event.data);\n\n\t\tthis.handleMessageFromView(event.data.method, event.data?.params);\n\t}\n\n\tasync handleMessageFromView(method: RequestFromView, params: any){\n\n\t\tswitch (method){\n\n\t\t\tcase RequestFromView.SIGN_PERSONAL_MESSAGE:\n\t\t\t\tconsole.log(\"Event from view: Sign personal message\");\n\t\t\t\tthis.currentCard.signPersonalMessage(params.id, params.data);\n\t\t\t\tbreak;\n\n\t\t\tcase RequestFromView.PUT_USER_INPUT:\n\t\t\t\tawait this.tokenScript.getViewController().setUserEntryValues(params);\n\t\t\t\tthis.renderAttributesTable();\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"TokenScript view API method: \" + method + \" is not implemented.\");\n\t\t}\n\t}\n\n\tasync dispatchViewEvent(event: ViewEvent, data: any, id: string) {\n\n\t\tswitch (event){\n\n\t\t\tcase ViewEvent.TOKENS_UPDATED:\n\t\t\t\tconst tokens = {\n\t\t\t\t\tcurrentInstance: data\n\t\t\t\t}\n\n\t\t\t\tconsole.log(\"ViewEvent.TOKENS_UPDATED\");\n\n\t\t\t\t//this.iframe.contentWindow.web3.tokens.dataChanged(tokens, tokens, cardId);\n\t\t\t\tthis.postMessageToView(event, {oldTokens: tokens, updatedTokens: tokens, cardId: id});\n\n\t\t\t\tawait this.renderAttributesTable();\n\t\t\t\tthis.hideLoader();\n\t\t\t\treturn;\n\n\t\t\tcase ViewEvent.EXECUTE_CALLBACK:\n\t\t\tcase ViewEvent.GET_USER_INPUT:\n\t\t\tcase ViewEvent.ON_CONFIRM:\n\t\t\t\tthis.postMessageToView(event, {...data, id});\n\t\t\t\treturn;\n\t\t}\n\t}\n}\n"],"mappings":"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"}